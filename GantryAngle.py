import pydicomimport csvimport os"""Method2 : extract_gantry_angleextract all gantry angle from file_path  if you want use this function, please upload one file_path which is a dicom file"""def extract_gantry_angle(file_path):    # step1: read one dicom file from given path and assigns value to the variable ds    try:        ds = pydicom.dcmread(file_path, force=True)    except IOError:        print("Error: The file was not found or failed to read")    res = []    # step2. find all gantry angles from ds    # gantry angle is located in dicomData.BeamSequence.Item_1.ControlPointSequence.Item_1.GantryAngle    try:        for bs in ds.BeamSequence:            for cp in bs.ControlPointSequence:                if hasattr(cp, 'GantryAngle'):                    res.append(cp.GantryAngle)    except AttributeError as err:        print("OS error: {0}".format(err))    # step3: Use 'set' to remove the same value    res = list(set(res))    return res'''Method3:  this function toCSVFile is used to convert param dataList to one csv file which contain value and result(pass/fail); paramType means: which param you want to   '''def validate_to_csv_file(dataList, destination, paramType="GantryAngle"):    csvFile = open(destination, 'w', newline='')    # step1: read truth value from truth table    filePath = os.path.split(os.path.realpath(__file__))[0] + "/truth_table"    file = open(filePath)    truth_values = set()    for line in file:        if line.startswith(paramType):            values = line[(len(paramType)+1):].split(",")            # print(values)            for value in values:                truth_values.add(int(value))    # step2: validate    # if the value is in truth value, the result is true, otherwise,false    try:        writer = csv.writer(csvFile)        writer.writerow((paramType + " #", 'value', 'result'))        for i in range(len(dataList)):            # flag = dataList[i] >= 60 and dataList[i] <= 210            flag = dataList[i] in truth_values            writer.writerow((i, dataList[i], flag))    finally:        csvFile.close()'''test method:'''def TestGantryAngle(file_path):    ds = pydicom.dcmread(file_path, force=True)    list1 = [150.0, 60.0]'''Method1:  this function auto_validate is used to auto validate file from DICOM file and output csv file'''def auto_validate():    # step1: read dicom file from given directory: DICOM_File_Path;    file_path = os.path.split(os.path.realpath(__file__))[0] + "/DICOM_File_Path"    file = open(file_path)    for line in file:        # step2: extract gantry angle from dicom to datalist;        dataList = extract_gantry_angle(line)        destination = line[0:line.rfind(".")] + ".csv"        # step3: validate and convert to csv file.        validate_to_csv_file(dataList, destination)        print("the output file is located in " + destination)    file.close()auto_validate()